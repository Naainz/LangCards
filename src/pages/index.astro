---
layout: "../layouts/Layout.astro"

let languages = [
  { code: 'zh', name: 'Chinese' },
  { code: 'es', name: 'Spanish' },
  { code: 'fr', name: 'French' },
  { code: 'de', name: 'German' },
  { code: 'ja', name: 'Japanese' },
];

let currentLanguage = 'zh';
---

<head>
  <meta charset="UTF-8">
  <link href="https://fonts.cdnfonts.com/css/satoshi" rel="stylesheet">
  <style>
    body {
      font-family: 'Satoshi', sans-serif;
    }
    .info-panel {
      position: fixed;
      top: 0;
      left: -300px;
      width: 300px;
      height: 100%;
      background-color: #F5F3F5;
      border-right: 2px solid #DEE3EB;
      padding: 20px;
      box-shadow: 2px 0 5px rgba(0,0,0,0.2);
      transition: left 0.3s ease;
      z-index: 10;
      overflow-y: auto;
    }
    .info-panel.active {
      left: 0;
    }
    .language-panel {
      position: fixed;
      top: 0;
      right: -300px;
      width: 300px;
      height: 100%;
      background-color: #F5F3F5;
      border-left: 2px solid #DEE3EB;
      padding: 20px;
      box-shadow: -2px 0 5px rgba(0,0,0,0.2);
      transition: right 0.3s ease;
      z-index: 10;
      overflow-y: auto;
    }
    .language-panel.active {
      right: 0;
    }
    .info-btn,
    .globe-btn {
      position: absolute;
      top: 15px;
      z-index: 20;
      cursor: pointer;
    }
    .info-btn {
      left: 15px;
    }
    .globe-btn {
      right: 15px;
    }
    .language-button {
      display: block;
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
      background-color: #DEE3EB;
      border: none;
      border-radius: 5px;
      text-align: center;
      cursor: pointer;
    }

    #main_content_area {
      font-weight: bold;
      font-size: 1.5rem;
      transition: transform 0.6s;
      transform-style: preserve-3d;
      position: relative;
      cursor: pointer;
      width: 100%;
      height: 100%;
    }

    #main_content_area.flip .flashcard-p1 {
      display: none;
    }

    #main_content_area.flip .flashcard-p2 {
      display: block;
    }

    .flashcard-p1, .flashcard-p2 {
      position: absolute;
      width: 100%;
      height: 100%;
      backface-visibility: hidden;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .flashcard-p2 {
      transform: rotateY(180deg);
    }

    .flip {
      transform: rotateY(180deg);
    }
  </style>
</head>

<div class="relative h-screen w-full overflow-hidden">
  <img src="/bg.png" alt="Background Image" class="absolute top-0 left-0 w-full h-full object-cover filter blur z-[-1]" />
  <div class="absolute top-0 left-0 w-full h-full bg-black opacity-30 z-[-1]"></div>

  <div class="w-full h-full flex justify-center items-center relative">
    <div class="top-bar absolute top-0 w-full flex justify-between p-5">
      <img src="/info.svg" alt="Info Icon" class="w-6 h-6 info-btn cursor-pointer filter invert" id="infoToggle" />
      <img src="/globe.svg" alt="Language Icon" class="w-6 h-6 globe-btn cursor-pointer filter invert" id="globeToggle" />
    </div>

    <div class="bg-[#F5F3F5] border-[5px] border-[#DEE3EB] rounded-lg p-8 w-full max-w-lg h-[400px] sm:w-[90%] sm:max-w-none sm:h-auto flex flex-col justify-between" style="min-height:400px;">
      
      <div class="flex-grow flex justify-center items-center" id="main_content_area">
        <p class="text-center flashcard-p1">
          Flashcard Content Area
        </p>
        <p class="text-center flashcard-p2">
          Flashcard Back Content
        </p>
      </div>

      <div class="flex justify-between mb-[10px] mx-[10px]">
        <button id="dontKnowBtn" class="bg-[#F5F3F5] border border-[#000] text-black rounded-[10px] py-2 px-4 w-[calc(50%-10px)]">
          Don't Know
        </button>
        <button id="knowBtn" class="bg-[#F5F3F5] border border-[#000] text-black rounded-[10px] py-2 px-4 w-[calc(50%-10px)]">
          Know
        </button>
      </div>

    </div>
  </div>

  <div id="infoPanel" class="info-panel">
    <h1 class="text-center">Language Flashcards</h1>
    <br>
    <h2>About This App</h2><br>
    <p>This app is designed to help you learn and memorize information through flashcards. You can mark your progress by selecting "Know" or "Don't Know" for each card.</p>
    <br><br>
    <h3>Features</h3><br>
    <ul>
      <li>Responsive design</li>
      <li>Easy-to-use interface</li>
      <li>Track your learning progress</li>
    </ul>
    <br><br>
    <p>Click the info button again to hide this panel.</p>
  </div>

  <div id="languagePanel" class="language-panel">
    {languages.map(lang => (
      <button class="language-button" onclick={`handleLanguageSelection('${lang.code}')`}>
        {lang.name}
      </button>
    ))}
  </div>
</div>

<script>
  window.translatedWords = [];
  window.currentWordIndex = 0;
  let currentLanguage = 'zh';

  async function translateWords() {
    try {
      const res = await fetch('/api/translate.json', {
        method: 'POST',
        body: JSON.stringify({ target: currentLanguage }),
        headers: { 'Content-Type': 'application/json' }
      });

      if (!res.ok) {
        return;
      }

      const data = await res.json();
      window.translatedWords = data.translations;
      window.currentWordIndex = 0;
      updateUI();
    } catch (error) {
      console.error("Error during fetch:", error);
    }
  }

  function handleKnow() {
    moveToNextWord();
  }

  function handleDontKnow() {
    moveToNextWord();
  }

  function moveToNextWord() {
    window.currentWordIndex = (window.currentWordIndex + 1) % window.translatedWords.length;
    updateUI();
  }

  function updateUI() {
    document.querySelector('.flashcard-p1').innerText = window.translatedWords[window.currentWordIndex]?.translated || 'Flashcard Content Area';
    document.querySelector('.flashcard-p2').innerText = window.translatedWords[window.currentWordIndex]?.original || 'Flashcard Back Content';
  }

  document.getElementById('knowBtn').onclick = handleKnow;
  document.getElementById('dontKnowBtn').onclick = handleDontKnow;

  document.getElementById('main_content_area').addEventListener('click', () => {
    const mainContentArea = document.getElementById('main_content_area');
    mainContentArea.classList.toggle('flip');
  });

  document.getElementById('infoToggle').addEventListener('click', () => {
    document.getElementById('infoPanel').classList.toggle('active');
  });

  document.getElementById('globeToggle').addEventListener('click', () => {
    document.getElementById('languagePanel').classList.toggle('active');
  });

  translateWords();
</script>
